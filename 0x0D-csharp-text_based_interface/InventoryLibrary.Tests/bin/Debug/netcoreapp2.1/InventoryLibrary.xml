<?xml version="1.0"?>
<doc>
    <assembly>
        <name>InventoryLibrary</name>
    </assembly>
    <members>
        <member name="T:InventoryLibrary.BaseClass">
            <summary>
            Public class {BaseClass} all classes will inherit from.
            </summary>
        </member>
        <member name="P:InventoryLibrary.BaseClass.id">
            <summary>
            Property {id} of type {string}
            </summary>
        </member>
        <member name="P:InventoryLibrary.BaseClass.date_created">
            <summary>
            Property {date_created} of type {DateTime}
            </summary>
        </member>
        <member name="P:InventoryLibrary.BaseClass.date_updated">
            <summary>
            Property {date_updated} of type {DateTime}
            </summary>
        </member>
        <member name="M:InventoryLibrary.BaseClass.#ctor">
            <summary>
            Method {BaseClass} to set the properties for BaseClass.
            </summary>
        </member>
        <member name="T:InventoryLibrary.Inventory">
            <summary>
            Public class {Inventory} inherits from BaseClass.
            Defines:
               - Public property {user_id} from {User} id. Required.
               - Public property {item_id} from {Item} id. Required.
               - Public property [quantity}. Required.
            </summary>
        </member>
        <member name="P:InventoryLibrary.Inventory.user_id">
            <summary>
            Public property {user_id} from {User} id. Required.
            </summary>
        </member>
        <member name="P:InventoryLibrary.Inventory.item_id">
            <summary>
            Public property {item_id} from {Item} id. Required.
            </summary>
        </member>
        <member name="P:InventoryLibrary.Inventory.quantity">
            <summary>
            Public property {quantity}. Required.
            </summary>
        </member>
        <member name="M:InventoryLibrary.Inventory.#ctor(System.String,System.String,System.Int32)">
            <summary>
            Public constructor {Inventory} with all Inventory properties as parameters.
            </summary>
            <param name="user_id">Type string. {User} id. Required.</param>
            <param name="item_id">Type string. {Item} id. Required.</param>
            <param name="quantity">Type int. Defaults to 1. Cannot be less than zero. Required.</param>
        </member>
        <member name="T:InventoryLibrary.Item">
            <summary>
            Public class {Item} inherits from BaseClass..
            Defines:
               - Public {name} string. Required.
               - Public {description} string. Optional.
               - Public {price} float, limit 2 decimals. Optional.
               - Public {tags} list of strings. Optional.
            </summary>
        </member>
        <member name="P:InventoryLibrary.Item.name">
            <summary> Public {name} string. Required. </summary>
        </member>
        <member name="P:InventoryLibrary.Item.description">
            <summary>Public {description} string. Optional.</summary>
        </member>
        <member name="P:InventoryLibrary.Item.price">
            <summary>Public {price} float, limit 2 decimals. Optional.</summary>
        </member>
        <member name="P:InventoryLibrary.Item.tags">
            <summary>Public {tags} list of strings. Optional.</summary>
        </member>
        <member name="M:InventoryLibrary.Item.#ctor(System.String,System.String,System.Single,System.Collections.Generic.List{System.String})">
            <summary>
            Constructor {Item} with all Item properties as parameters.
            </summary>
            <param name="name">string required</param>
            <param name="description">string defaults to null</param>
            <param name="price">float defaults to 0.0f</param>
            <param name="tags">List of strings defaults to null</param>
        </member>
        <member name="T:InventoryLibrary.JSONStorage">
            <summary>
            Public class {JSONStorage}.
            Defines:
               - Public property {objects}. Dict with keys '{Class}.{id}' and values are the objects.
               - Public method {All}. Returns objects dictionary.
               - Public method {New(Obj)}. Adds new key-value pair to {objects}
                 Key: {obj ClassName}.{obj id}, Value: {obj}
               - Public method {Save}. Serializes {objects} to JSON and saves JSON file
                 to location: 'storage/inventory_manager.json'.
               - Public method {Load}. Deserializes JSON file to {objects}.
            </summary>
        </member>
        <member name="F:InventoryLibrary.JSONStorage.objects">
            <summary>
            Public property {objects}. Dictionary - Key: string 'Classname.id' Value: objects.
            </summary>
        </member>
        <member name="M:InventoryLibrary.JSONStorage.All">
            <summary>
            Public method {All}. Returns {objects} type dictionary.
            </summary>
            <returns>{objects} - Type dictionary. Key:ClassName.id Value: this.objects </returns>
        </member>
        <member name="M:InventoryLibrary.JSONStorage.New(InventoryLibrary.BaseClass)">
            <summary>
            Public method {New(Obj)}. Takes parameter {obj} of type BaseClass.
            Adds new key-value pair to {objects}. Key: 'obj.GetType().Name'+'obj.id', Value: {obj}.
            </summary>
            <param name="obj">Object to add to {objects}</param>
        </member>
        <member name="M:InventoryLibrary.JSONStorage.Save">
            <summary>
            Public method {Save}. Serializes {objects} to JSON and saves JSON file
            to location: '../storage/inventory_manager.json'. If it doesn't exist, create it.
            </summary>
        </member>
        <member name="T:InventoryLibrary.User">
            <summary>
            Public class {User} inherits from BaseClass..
            Defines:
               - Public propert {name} string. Required.
            </summary>
        </member>
        <member name="P:InventoryLibrary.User.name">
            <summary> Public {name} string. Required. </summary>
        </member>
        <member name="M:InventoryLibrary.User.#ctor(System.String)">
            <summary>
            Constructor {User} with all User properties as parameters.
            </summary>
            <param name="name">string required</param>
        </member>
    </members>
</doc>
